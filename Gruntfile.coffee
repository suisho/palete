exporseWatch = (config, task) ->
  confSrc = config[task].src
  return {
    files: [
      confSrc.files[0].cwd + confSrc.files[0].src  
    ]
    tasks: task
  }
  
module.exports = (grunt) ->
  require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);

  config = {
    clean: ["public"]
    jade:
      src:
        files: [
          expand: true
          cwd: "src/views/"
          src: "**/*.jade"
          dest: "public"
          ext: ".html"
        ]
    stylus:
      src:
        files: [
          expand: true
          cwd: "src/"
          src: "css/**/*.styl"
          dest: "public"
          ext: ".css"
        ]
    copy:
      src:
        files:[{
          expand: true
          cwd: "src/"
          src: "js/**/*.js"
          dest: "public"  
        },{
          expand: true
          cwd: "src/"
          src: "css/**/*.css"
          dest: "public"  
        }]
    connect:
      server:
        options:
          port: 7777
          base: 'public/'
          keepalive :true
          hostname: '*'
          middleware: (connect, options) ->
            return [
              require('connect-livereload')({
                port: config.watch.public.options.livereload
              }),
              connect.static(options.base[0])
            ];
    open:
      server:
        path: 'http://localhost:<%= connect.server.options.port %>'
    browserify:
      options:
        bundleOptions:
          debug: true
        browserifyOptions:
          debug: true
      dist:
        files:
          "public/js/client.js" : ["src/lib/client.js"]
    'gh-pages':
      public:
        options:
          base: "public"
          message: "Generated by grunt"
        src: "**/**"
    concurrent:
      compile:
        ['jade', 'stylus', 'copy', 'browserify'] 
      server: 
        tasks: [
          'open',
          'connect',
          'watch:public',
          'watch:jade',
          'watch:stylus',
        ]
       options:
         logConcurrentOutput: true
            
  }
  config.watch = 
    jade: exporseWatch(config, "jade")
    stylus: exporseWatch(config, "stylus")
    public:
      files: [
        'public/**/*',
        '!public/bower_components/**/*'
      ]
      options:
        livereload: 35729
  grunt.initConfig config
  grunt.registerTask 'compile', ['clean', 'concurrent:compile']
  grunt.registerTask 'server', ['compile', 'concurrent:server']